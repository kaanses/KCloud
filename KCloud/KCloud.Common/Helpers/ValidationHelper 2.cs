// KCloud.Auth/Helpers/ValidationHelper.csusing Ardalis.Result;using FluentValidation;using Microsoft.Extensions.Logging;namespace KCloud.Common.Helpers;public static class ValidationHelper{    public static async Task<Result> ValidateAsync<T>(        IValidator<T> validator,         T model,        ILogger logger        )    {        var validationResult = await validator.ValidateAsync(model);        if (!validationResult.IsValid)        {            var errors = validationResult.Errors.Select(e => e.ErrorMessage).ToList();            var errorMessage = string.Join(", ", errors);                        // Log validation errors            logger.LogWarning("Validation failed: {ValidationErrors}", errorMessage);                    // Return the actual validation errors, not a generic message            return Result.Error(errorMessage);        }                return Result.Success();    }    public static bool BeValidName(string name)    {        if (string.IsNullOrEmpty(name))            return false;        // Invalid characters for both files and folders        char[] invalidChars = { '/', '\\', ':', '*', '?', '"', '<', '>', '|' };        return !name.Any(c => invalidChars.Contains(c));    }}