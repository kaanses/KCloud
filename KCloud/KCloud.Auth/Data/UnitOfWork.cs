// KCloud.Auth/Data/UnitOfWork.csusing KCloud.Auth.Interfaces;namespace KCloud.Auth.Data;public class UnitOfWork(AuthDbContext context) : IUnitOfWork{    private Dictionary<Type, object>? _repositories;    public IRepository<T> Repository<T>() where T : class    {        _repositories ??= new Dictionary<Type, object>();        var type = typeof(T);        if (!_repositories.ContainsKey(type))        {            _repositories[type] = new Repository<T>(context);        }        return (IRepository<T>)_repositories[type];    }    public async Task<int> CommitAsync(CancellationToken cancellationToken = default)    {        return await context.SaveChangesAsync(cancellationToken);    }        }