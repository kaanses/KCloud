using KCloud.Auth.Models;using KCloud.Auth.Models.Entity;using Microsoft.EntityFrameworkCore;namespace KCloud.Auth.Data;public class AuthDbContext(DbContextOptions<AuthDbContext> options) : DbContext(options){    public DbSet<User> Users { get; set; }    public DbSet<RefreshToken> RefreshTokens { get; set; }    protected override void OnModelCreating(ModelBuilder modelBuilder)    {        base.OnModelCreating(modelBuilder);        modelBuilder.Entity<User>(entity =>        {            entity.HasKey(e => e.Id);            entity.Property(e => e.Username).IsRequired().HasMaxLength(50);            entity.Property(e => e.Email).IsRequired().HasMaxLength(100);            entity.Property(e => e.PasswordHash).IsRequired();            entity.Property(e => e.Role).HasMaxLength(20);                                    entity.HasIndex(e => e.Email).IsUnique();            entity.HasIndex(e => e.Username).IsUnique();                        entity.HasOne(u => u.RefreshToken)                .WithOne(rt => rt.User)                .HasForeignKey<RefreshToken>(rt => rt.UserId)                .OnDelete(DeleteBehavior.Cascade);        });                modelBuilder.Entity<RefreshToken>(entity =>        {            entity.HasKey(e => e.Id);            entity.Property(e => e.Token).IsRequired();            entity.Property(e => e.ExpiryTime).IsRequired();                        entity.HasIndex(e => e.UserId).IsUnique();        });    }}