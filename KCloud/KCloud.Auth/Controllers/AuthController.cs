// KCloud.Auth/Controllers/AuthController.csusing KCloud.Auth.Features.Authentication.Commands;using KCloud.Auth.Features.Authentication.Queries;using KCloud.Auth.Helpers;using MediatR;using Microsoft.AspNetCore.Authorization;using Microsoft.AspNetCore.Mvc;using System.Security.Claims;namespace KCloud.Auth.Controllers;[Route("api/auth")]public class AuthController : BaseController{    private readonly IMediator _mediator;    private readonly ILogger<AuthController> _logger;    private readonly IConfiguration _configuration;    public AuthController(        IMediator mediator,        ILogger<AuthController> logger,        IConfiguration configuration)    {        _mediator = mediator;        _logger = logger;        _configuration = configuration;    }    [HttpPost("register")]    public async Task<IActionResult> Register([FromBody] RegisterUserCommand command)    {        var result = await _mediator.Send(command);        return HandleResult(result);    }        [HttpPost("login")]    public async Task<IActionResult> Login([FromBody] LoginUserCommand command)    {        var result = await _mediator.Send(command);        return HandleResult(result);    }        [HttpPost("refresh")]    public async Task<IActionResult> RefreshToken([FromBody] RefreshTokenCommand command)    {        var result = await _mediator.Send(command);        return HandleResult(result);    }        [HttpPost("logout")]    public async Task<IActionResult> Logout([FromBody] LogoutCommand command)    {        var result = await _mediator.Send(command);        return HandleResult(result);    }        [HttpGet("current")]    public async Task<IActionResult> GetCurrentUser()    {        _logger.LogInformation("Get current user id hit");        var query = new GetCurrentUserQuery();        var result = await _mediator.Send(query);        return HandleResult(result);    }}