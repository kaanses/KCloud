using Ardalis.Result;using KCloud.Auth.Interfaces;using KCloud.Common.Helpers;using MediatR;using Microsoft.Extensions.Localization;namespace KCloud.Auth.Features.Authentication.Commands;public class LogoutCommandHandler : IRequestHandler<LogoutCommand, Result>{    private readonly IRefreshTokenService _refreshTokenService;    private readonly ILogger<LogoutCommandHandler> _logger;    private readonly IStringLocalizer _localizer;    private IHttpContextAccessor _httpContextAccessor;    public LogoutCommandHandler(        IRefreshTokenService refreshTokenService,        ILogger<LogoutCommandHandler> logger,        IStringLocalizer localizer, IHttpContextAccessor httpContextAccessor)    {        _refreshTokenService = refreshTokenService;        _logger = logger;        _localizer = localizer;        _httpContextAccessor = httpContextAccessor;    }    public async Task<Result> Handle(LogoutCommand request, CancellationToken cancellationToken)    {        try        {            var currentUserId = CurrentUserHelper.GetUserId(_httpContextAccessor);            await _refreshTokenService.RevokeRefreshTokenAsync(currentUserId ?? Guid.Empty, cancellationToken);                        _logger.LogInformation("Successfully logged out user: {UserId}", currentUserId);            return Result.Success();        }        catch (Exception ex)        {            _logger.LogError(ex, "Error during logout for user");            return Result.Error(_localizer["LogoutError"].Value);        }    }}