// KCloud.Auth/Features/Authentication/Commands/LogoutCommandHandler.csusing Ardalis.Result;using KCloud.Auth.Interfaces;using KCloud.Auth.Services;using MediatR;using Microsoft.Extensions.Localization;namespace KCloud.Auth.Features.Authentication.Commands;public class LogoutCommandHandler : IRequestHandler<LogoutCommand, Result>{    private readonly IRefreshTokenService _refreshTokenService;    private readonly ILogger<LogoutCommandHandler> _logger;    private readonly IStringLocalizer _localizer;    public LogoutCommandHandler(        IRefreshTokenService refreshTokenService,        ILogger<LogoutCommandHandler> logger,        IStringLocalizer localizer)    {        _refreshTokenService = refreshTokenService;        _logger = logger;        _localizer = localizer;    }    public async Task<Result> Handle(LogoutCommand request, CancellationToken cancellationToken)    {        try        {            // Revoke refresh token            var result = await _refreshTokenService.RevokeRefreshTokenAsync(request.UserId, cancellationToken);            if (!result)            {                _logger.LogWarning("Failed to revoke refresh token for user: {UserId}", request.UserId);                // Still return success as this doesn't really affect the user experience            }            _logger.LogInformation("Successfully logged out user: {UserId}", request.UserId);            return Result.Success();        }        catch (Exception ex)        {            _logger.LogError(ex, "Error during logout for user: {UserId}", request.UserId);            return Result.Error(_localizer["LogoutError"].ToString());        }    }}