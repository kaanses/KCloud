using Ardalis.Result;using AutoMapper;using KCloud.Auth.Interfaces;using KCloud.Auth.Models;using KCloud.Auth.Models.DTO;using KCloud.Auth.Models.Entity;using KCloud.Common.Helpers;using MediatR;using Microsoft.Extensions.Localization;namespace KCloud.Auth.Features.Authentication.Queries;public class GetCurrentUserQueryHandler(    IUnitOfWork unitOfWork,    IMapper mapper,    ILogger<GetCurrentUserQueryHandler> logger,    IHttpContextAccessor httpContextAccessor)    : IRequestHandler<GetCurrentUserQuery, Result<UserDTO>>{    public async Task<Result<UserDTO>> Handle(GetCurrentUserQuery request, CancellationToken cancellationToken)    {        var currentUserId = CurrentUserHelper.GetUserId(httpContextAccessor);        logger.LogInformation("CurrentUserHelper returned: {UserId}", currentUserId);        if (currentUserId == null)        {            return Result<UserDTO>.Unauthorized();        }                var user = await unitOfWork.Repository<User>().GetByIdAsync(currentUserId.Value, cancellationToken);        logger.LogInformation("Retrieved user with ID: {UserId}",currentUserId);        var userDto = mapper.Map<UserDTO>(user);        return Result<UserDTO>.Success(userDto);    }}