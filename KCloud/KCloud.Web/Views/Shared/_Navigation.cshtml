@using System.Globalization@using Microsoft.AspNetCore.Mvc.TagHelpers@section Styles{            }<style>    .navbar-container {        background-color: #d4ff00;        box-shadow: 0 2px 10px rgba(0,0,0,0.1);        position: relative;        top: 0;        z-index: 1000;        transition: all 0.3s ease;    }        .logo-text {        font-family: 'Azeret Mono', monospace;        font-size: 2.2rem;        color: black;        line-height: 1;        transition: all 0.3s ease;        padding-top: 0;    }    .navbar-container.scrolled .logo-text {        font-size: 1.5rem;    }    .logo-svg {        width: 4rem;        height: 4rem;        fill: #d4ff00;        transition: all 0.3s ease;    }    .navbar-container.scrolled .logo-svg {        width: 1.2rem;        height: 1.2rem;    }    .logo:hover {        text-decoration: none !important;        transform: scale(1.02);    }    .nav-pills .nav-link {        font-family: 'Azeret Mono', monospace;        font-weight: 500;        color: black;        background: transparent;        border-radius: 0.5rem;        transition: all 0.3s ease;        margin-right: 0.3rem;    }    .btn-auth {        background: transparent !important;        border: none !important;        color: black !important;        text-decoration: none !important;        font-family: 'Azeret Mono', monospace;        font-weight: 500;        border-radius: 0.5rem;        transition: all 0.3s ease;        margin-right: 0.3rem;    }    .btn-auth:hover {        background: black !important;        color: white !important;        transform: translateY(-2px);        box-shadow: 0 4px 15px rgba(212, 255, 0, 0.3);    }    .nav-pills .nav-item.active .nav-link,    .nav-pills .nav-link:hover {        background: black !important;        color: white !important;        transform: translateY(-2px);        box-shadow: 0 4px 15px rgba(212, 255, 0, 0.3);    }    .nav-link.active {        background: black !important;        color: white !important;        box-shadow: 0 4px 15px rgba(212, 255, 0, 0.3);    }    .dropdown-menu {        background: #292929;        color: white;        padding: 8px;    }    .dropdown-item {        font-family: 'Azeret Mono', monospace;        transition: background-color 0.2s ease;        color: white;        margin-bottom: 5px;    }    .dropdown-item:hover {        background: #f9fafb;    }    .dropdown-item.text-danger:hover {        background: #fef2f2;    }    .navbar-section-left {        flex-shrink: 0;    }    .navbar-section-right {        flex-shrink: 0;        display: flex;        align-items: center;        justify-content: flex-end;    }    .navbar-section-center {        flex-grow: 1;        display: flex;        justify-content: center;    }    .nav-link-icon {        font-size: 1.1rem;        margin-right: 3px;    }    /* Mobile Hamburger Menu Styles */    /* Mobile Menu Toggle - Make sure it's visible! */    .mobile-menu-toggle {        position: relative;        z-index: 1001;        cursor: pointer;        padding: 8px;        margin-left: auto;        margin-top: 15px;        border-radius: 4px;    }    .menu-icon {        height: 30px;        width: 30px;        position: relative;    }    .menu-icon__line {        height: 2px;        width: 20px;        display: block;        background-color: #000;        margin-bottom: 5px;        cursor: pointer;        transition: transform 0.3s ease, background-color 0.3s ease;        border-radius: 1px;    }    .menu-icon__line-left {        width: 12px;        transition: all 200ms linear;    }    .menu-icon__line-right {        width: 12px;        float: right;        transition: all 200ms linear;    }    .menu-icon:hover .menu-icon__line-left,    .menu-icon:hover .menu-icon__line-right {        width: 24px;    }    /* Mobile Navigation Overlay */    .mobile-nav-overlay {        position: fixed;        top: 0;        left: 0;        width: 100%;        height: 100vh;        background: rgba(0, 0, 0, 0.95);        backdrop-filter: blur(10px);        z-index: 1000;        opacity: 0;        visibility: hidden;        transition: all 0.4s cubic-bezier(0.77, 0, 0.175, 1);    }    .mobile-nav-content {        position: absolute;        top: 50%;        left: 50%;        transform: translate(-50%, -50%);        text-align: center;        width: 100%;    }    .mobile-nav-item {        opacity: 0;        transform: translateY(30px);        transition: all 0.4s cubic-bezier(0.77, 0, 0.175, 1);    }    .mobile-nav-item a {        color: white;        text-decoration: none;        font-family: 'Azeret Mono', monospace;        font-size: 1.5rem;        font-weight: 600;        display: flex;        align-items: center;        justify-content: center;        padding: 1rem;        border-radius: 0.5rem;        transition: all 0.3s ease;        position: relative;        overflow: hidden;    }    .mobile-nav-item a:before {        content: '';        position: absolute;        top: 0;        left: -100%;        width: 100%;        height: 100%;        background: linear-gradient(90deg, transparent, rgba(212, 255, 0, 0.2), transparent);        transition: left 0.5s;    }    .mobile-nav-item a:hover:before {        left: 100%;    }    .mobile-nav-item a:hover {        background: rgba(212, 255, 0, 0.1);        transform: translateY(-2px);        box-shadow: 0 4px 15px rgba(212, 255, 0, 0.3);    }    .mobile-nav-item .nav-link-icon {        font-size: 1.3rem;        margin-right: 0.5rem;    }    /* Active state for mobile nav */    body.mobile-nav-active .mobile-nav-overlay {        opacity: 1;        visibility: visible;    }    body.mobile-nav-active .mobile-nav-item {        opacity: 1;        transform: translateY(0);    }    body.mobile-nav-active .mobile-nav-item:nth-child(1) { transition-delay: 0.1s; }    body.mobile-nav-active .mobile-nav-item:nth-child(2) { transition-delay: 0.2s; }    body.mobile-nav-active .mobile-nav-item:nth-child(3) { transition-delay: 0.3s; }    body.mobile-nav-active .mobile-nav-item:nth-child(4) { transition-delay: 0.4s; }    body.mobile-nav-active .mobile-nav-item:nth-child(5) { transition-delay: 0.5s; }    body.mobile-nav-active .mobile-nav-item:nth-child(6) { transition-delay: 0.6s; }    /* Hamburger animation when active */    body.mobile-nav-active .menu-icon__line {        background-color: #000;    }    body.mobile-nav-active .menu-icon__line:nth-child(1) {        transform: translateY(7px) rotate(45deg);    }    body.mobile-nav-active .menu-icon__line:nth-child(2) {        opacity: 0;    }    .dropdown-submenu {        position: relative;    }    .dropdown-submenu-menu {        position: absolute;        top: 0;        right: 100%;        min-width: 150px;        display: none;        background: #292929 !important;        border: 1px solid rgba(212, 255, 0, 0.2) !important;        border-radius: 8px !important;        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3) !important;        z-index: 1000;    }    .dropdown-submenu-toggle {        display: flex;        justify-content: space-between;        align-items: center;    }    .dropdown-submenu:hover .dropdown-submenu-menu {        display: block;    }    /* Language button styles */    .language-btn {        background: rgba(255, 255, 255, 0.05);        border: 2px solid rgba(212, 255, 0, 0.3);        color: white;        border-radius: 8px;        padding: 8px 12px;        font-family: 'Azeret Mono', monospace;        font-size: 0.9rem;        transition: all 0.3s ease;        display: flex;        align-items: center;        gap: 6px;    }    .language-btn:hover {        border-color: #d4ff00;        background: rgba(212, 255, 0, 0.1);        color: #d4ff00;    }    .current-lang {        font-weight: 600;    }    .language-option.active {        background: #d4ff00 !important;        color: #130623 !important;    }</style><div class="container-fluid shadow-sm sticky-top py-2 navbar-container" style="max-height: 75px">    <div class="d-flex justify-content-between align-items-center w-100">        <div class="navbar-section-left">            <a href="@Url.Action("Index", "Home")" class="text-decoration-none d-flex align-items-center me-5">                <svg style="margin-top: -3px" xmlns="http://www.w3.org/2000/svg" width="39" height="39" viewBox="0 0 24 24">                    <g fill="black" fill-rule="evenodd" clip-rule="evenodd">                        <path d="M12.25 2.834c-.46-.078-1.088-.084-2.22-.084c-1.917 0-3.28.002-4.312.14c-1.012.135-1.593.39-2.016.812c-.423.423-.677 1.003-.812 2.009c-.138 1.028-.14 2.382-.14 4.29v4c0 1.906.002 3.26.14 4.288c.135 1.006.389 1.586.812 2.01c.423.422 1.003.676 2.009.811c1.028.139 2.382.14 4.289.14h4c1.907 0 3.262-.002 4.29-.14c1.005-.135 1.585-.389 2.008-.812c.423-.423.677-1.003.812-2.009c.138-1.027.14-2.382.14-4.289v-.437c0-1.536-.01-2.264-.174-2.813h-3.13c-1.133 0-2.058 0-2.79-.098c-.763-.103-1.425-.325-1.954-.854c-.529-.529-.751-1.19-.854-1.955c-.098-.73-.098-1.656-.098-2.79V2.835Zm1.5.776V5c0 1.2.002 2.024.085 2.643c.08.598.224.891.428 1.094c.203.204.496.348 1.094.428c.619.083 1.443.085 2.643.085h2.02a45.815 45.815 0 0 0-1.17-1.076l-3.959-3.563A37.2 37.2 0 0 0 13.75 3.61Zm-3.575-2.36c1.385 0 2.28 0 3.103.315c.823.316 1.485.912 2.51 1.835l.107.096l3.958 3.563l.125.112c1.184 1.065 1.95 1.754 2.361 2.678c.412.924.412 1.954.411 3.546v.661c0 1.838 0 3.294-.153 4.433c-.158 1.172-.49 2.121-1.238 2.87c-.749.748-1.698 1.08-2.87 1.238c-1.14.153-2.595.153-4.433.153H9.944c-1.838 0-3.294 0-4.433-.153c-1.172-.158-2.121-.49-2.87-1.238c-.748-.749-1.08-1.698-1.238-2.87c-.153-1.14-.153-2.595-.153-4.433V9.944c0-1.838 0-3.294.153-4.433c.158-1.172.49-2.121 1.238-2.87c.75-.749 1.701-1.08 2.878-1.238c1.144-.153 2.607-.153 4.455-.153h.202Z"/>                        <path d="M9.667 13.75c-.782 0-1.25.54-1.25 1.015v.017c.103.043.203.092.298.148a.75.75 0 1 1-.763 1.292a.858.858 0 0 0-.452-.119c-.505 0-.75.342-.75.573c0 .232.245.574.75.574H11c.781 0 1.25-.54 1.25-1.015c0-.382-.285-.789-.815-.95a1.491 1.491 0 0 0-.878.002a.75.75 0 1 1-.384-1.45a1.479 1.479 0 0 0-.506-.087Zm2.627.266c-.36-1.068-1.451-1.766-2.627-1.766c-1.399 0-2.696.998-2.749 2.425c-.914.228-1.668.982-1.668 2.002c0 1.23 1.098 2.073 2.25 2.073H11c1.428 0 2.75-1.04 2.75-2.515c0-1-.622-1.81-1.456-2.22Z"/>                    </g>                </svg>                <h1 style="margin-left: 7px; color: #d4ff00; -webkit-text-stroke: 3px black; font-weight: 1000; margin-right: 1px" class="logo-text mb-0">K</h1>                <h1 style="font-weight: 600;" class="logo-text mb-0">Cloud</h1>            </a>        </div>        <div class="navbar-section-center d-none d-lg-flex ms-5">            <ul class="nav nav-pills align-items-center">                <li class="nav-item">                    <a class="nav-link @(ViewContext.RouteData.Values["action"]?.ToString() == "Index" && ViewContext.RouteData.Values["controller"]?.ToString() == "Home" ? "active" : "")"                       href="@Url.Action("Index", "Home")">                        <i class="bi bi-house nav-link-icon"></i>Home                    </a>                </li>                @if (User.Identity?.IsAuthenticated == true)                {                <li class="nav-item">                    <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "File" ? "active" : "")"                       href="@Url.Action("Index", "File")">                        <i class="bi bi-folder nav-link-icon"></i>My Files                    </a>                </li>                }                <li class="nav-item d-none d-sm-block">                    <a class="nav-link @(ViewContext.RouteData.Values["action"]?.ToString() == "About" && ViewContext.RouteData.Values["controller"]?.ToString() == "Home" ? "active" : "")"                       href="@Url.Action("About", "Home")">                        <i class="bi bi-info-circle nav-link-icon"></i>About                    </a>                </li>                <li class="nav-item d-none d-md-block">                    <a class="nav-link @(ViewContext.RouteData.Values["action"]?.ToString() == "Pricing" && ViewContext.RouteData.Values["controller"]?.ToString() == "Home" ? "active" : "")"                       href="@Url.Action("Pricing", "Home")">                        <i class="bi bi-tag nav-link-icon"></i>Pricing                    </a>                </li>            </ul>        </div>        <div class="navbar-section-right">            <!-- Mobile Menu Toggle -->            <div class="mobile-menu-toggle d-lg-none">                <div class="menu-icon">                    <span class="menu-icon__line menu-icon__line-left"></span>                    <span class="menu-icon__line"></span>                    <span class="menu-icon__line menu-icon__line-right"></span>                </div>            </div>            <!-- Desktop Navigation -->            @if (User.Identity?.IsAuthenticated == true)            {            <ul class="nav nav-pills align-items-center d-none d-lg-flex">                <li class="nav-item">                    <button type="button" class="nav-link btn-auth" onclick="showUploadDialog()">                        <i class="bi bi-plus-circle nav-link-icon"></i>Upload                    </button>                </li>                <li class="nav-item dropdown">                    <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">                        <i class="bi bi-person-circle nav-link-icon"></i>@User.Identity.Name                    </a>                    <ul class="dropdown-menu dropdown-menu-end">                        <li><a class="dropdown-item" href="#"><i class="bi bi-person me-2"></i>Profile</a></li>                        <li><hr class="dropdown-divider"></li>                        <li><hr class="dropdown-divider"></li>                        <li>                            <form method="post" action="@Url.Action("Logout", "Auth")">                                @Html.AntiForgeryToken()                                <button type="submit" class="dropdown-item text-danger">                                    <i class="bi bi-box-arrow-right me-2"></i>Logout                                </button>                            </form>                        </li>                    </ul>                </li>            </ul>            }            else            {            <ul class="nav nav-pills align-items-center d-none d-lg-flex">                <li class="nav-item">                    <a class="nav-link @(ViewContext.RouteData.Values["action"]?.ToString() == "Login" ? "active" : "")"                       href="@Url.Action("Login", "Auth")">                        <i style="font-size:1.1rem" class="bi bi-box-arrow-in-right nav-link-icon"></i>Login                    </a>                </li>                <li class="nav-item">                    <a class="nav-link @(ViewContext.RouteData.Values["action"]?.ToString() == "Register" ? "active" : "")"                       href="@Url.Action("Register", "Auth")">                        <i class="bi bi-person-plus nav-link-icon"></i>Register                    </a>                </li>            </ul>            }        </div>    </div></div><!-- Mobile Navigation Overlay --><div class="mobile-nav-overlay">    <div class="mobile-nav-content">        <div class="mobile-nav-item">            <a href="@Url.Action("Index", "Home")">                <i class="bi bi-house nav-link-icon"></i>Home            </a>        </div>        @if (User.Identity?.IsAuthenticated == true)        {        <div class="mobile-nav-item">            <a href="@Url.Action("Index", "File")">                <i class="bi bi-folder nav-link-icon"></i>My Files            </a>        </div>        <div class="mobile-nav-item">            <a href="#" onclick="showUploadDialog()">                <i class="bi bi-plus-circle nav-link-icon"></i>Upload            </a>        </div>        }        <div class="mobile-nav-item">            <a href="@Url.Action("About", "Home")">                <i class="bi bi-info-circle nav-link-icon"></i>About            </a>        </div>        <div class="mobile-nav-item">            <a href="@Url.Action("Pricing", "Home")">                <i class="bi bi-tag nav-link-icon"></i>Pricing            </a>        </div>        @if (User.Identity?.IsAuthenticated == true)        {        <div class="mobile-nav-item">            <a href="#">                <i class="bi bi-person nav-link-icon"></i>Profile            </a>        </div>        <div class="mobile-nav-item">            <form method="post" action="@Url.Action("Logout", "Auth")" style="display: inline;">                @Html.AntiForgeryToken()                <a href="#" onclick="this.closest('form').submit(); return false;" style="color: #ff6b6b;">                    <i class="bi bi-box-arrow-right nav-link-icon"></i>Logout                </a>            </form>        </div>        }        else        {        <div class="mobile-nav-item">            <a href="#" onclick="toggleLanguage()">                <i class="bi bi-globe nav-link-icon"></i>Language: <span class="mobile-current-lang">EN</span>            </a>        </div>        <div class="mobile-nav-item">            <a href="@Url.Action("Login", "Auth")">                <i class="bi bi-box-arrow-in-right nav-link-icon"></i>Login            </a>        </div>        <div class="mobile-nav-item">            <a href="@Url.Action("Register", "Auth")">                <i class="bi bi-person-plus nav-link-icon"></i>Register            </a>        </div>        }    </div></div><script>    // Get current language from server (this is the source of truth)    const currentLanguage = '@CultureInfo.CurrentUICulture.TwoLetterISOLanguageName';    // Mobile menu toggle functionality    document.addEventListener('DOMContentLoaded', function() {        const mobileMenuToggle = document.querySelector('.mobile-menu-toggle');        const body = document.body;        if (mobileMenuToggle) {            mobileMenuToggle.addEventListener('click', function() {                body.classList.toggle('mobile-nav-active');            });            // Close mobile menu when clicking on overlay            const overlay = document.querySelector('.mobile-nav-overlay');            if (overlay) {                overlay.addEventListener('click', function(e) {                    if (e.target === this) {                        body.classList.remove('mobile-nav-active');                    }                });            }            // Close mobile menu when clicking on navigation links            document.querySelectorAll('.mobile-nav-item a').forEach(link => {                link.addEventListener('click', function(e) {                    // Don't close menu for language toggle                    if (!this.hasAttribute('onclick') || !this.getAttribute('onclick').includes('toggleLanguage')) {                        body.classList.remove('mobile-nav-active');                    }                });            });        }        // Initialize language display based on server culture        updateLanguageDisplay(currentLanguage);        // Handle dropdown language clicks for authorized users        document.querySelectorAll('.language-option').forEach(option => {            option.addEventListener('click', function(e) {                e.preventDefault();                e.stopPropagation();                const lang = this.getAttribute('data-lang');                switchLanguage(lang);            });        });        // Handle dropdown submenu behavior        const submenuToggle = document.querySelector('.dropdown-submenu-toggle');        if (submenuToggle) {            submenuToggle.addEventListener('click', function(e) {                e.preventDefault();                e.stopPropagation();                const submenu = this.nextElementSibling;                if (submenu) {                    submenu.style.display = submenu.style.display === 'block' ? 'none' : 'block';                }            });        }        // Close submenu when clicking outside        document.addEventListener('click', function(e) {            const submenu = document.querySelector('.dropdown-submenu-menu');            if (submenu && !e.target.closest('.dropdown-submenu')) {                submenu.style.display = 'none';            }        });    });    // Toggle function for unauthorized users (called from HTML onclick)    function toggleLanguage() {        const newLang = currentLanguage === 'en' ? 'tr' : 'en';        switchLanguage(newLang);    }    // Main language switch function    async function switchLanguage(lang) {        try {            const response = await fetch('/Home/SetLanguage', {                method: 'POST',                headers: { 'Content-Type': 'application/json' },                body: JSON.stringify(lang)            });            if (response.ok) {                // Close mobile menu if open                document.body.classList.remove('mobile-nav-active');                // Reload page to apply new culture from server                window.location.reload();            } else {                const result = await response.json();                console.error('Language switch failed:', result.error || 'Unknown error');            }        } catch (error) {            console.error('Error switching language:', error);        }    }    // Update UI elements (for immediate feedback before reload)    function updateLanguageDisplay(lang) {        const currentLangEl = document.querySelector('.current-lang');        const mobileLangEl = document.querySelector('.mobile-current-lang');        if (currentLangEl) {            currentLangEl.textContent = lang.toUpperCase();        }        if (mobileLangEl) {            mobileLangEl.textContent = lang.toUpperCase();        }        // Update active states in dropdown        document.querySelectorAll('.language-option').forEach(option => {            option.classList.remove('active');            if (option.getAttribute('data-lang') === lang) {                option.classList.add('active');            }        });    }</script>