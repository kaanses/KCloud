<!DOCTYPE html><html lang="en"><head>    <meta charset="utf-8"/>    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>    <title>@ViewData["Title"] - KCloud.Web</title>    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true"/>    <link rel="stylesheet" href="~/KCloud.Web.styles.css" asp-append-version="true"/></head><body><header>    <nav class="navbar navbar-expand-lg navbar-dark bg-primary shadow">        <div class="container">            <a class="navbar-brand fw-bold" href="@Url.Action("Index", "Home")">                <i class="bi bi-cloud-arrow-up me-2"></i>                KCloud            </a>            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">                <span class="navbar-toggler-icon"></span>            </button>            <div class="collapse navbar-collapse" id="navbarNav">                <ul class="navbar-nav me-auto">                    <li class="nav-item">                        <a class="nav-link" href="@Url.Action("Index", "Home")">                            <i class="bi bi-house me-1"></i>Home                        </a>                    </li>                    @if (User.Identity?.IsAuthenticated == true)                    {                        <li class="nav-item">                            <a class="nav-link" href="@Url.Action("Index", "File")">                                <i class="bi bi-folder me-1"></i>My Files                            </a>                        </li>                        <li class="nav-item">                            <a class="nav-link" href="@Url.Action("Index", "File", new { isSharedWithMeFolder = true })">                                <i class="bi bi-people me-1"></i>Shared with Me                            </a>                        </li>                    }                </ul>                <ul class="navbar-nav">                    @if (User.Identity?.IsAuthenticated == true)                    {                    <li class="nav-item me-2">                        <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#uploadModal">                            <i class="bi bi-plus-circle me-1"></i>Upload                        </button>                    </li>                    <li class="nav-item dropdown">                        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">                            <i class="bi bi-person-circle me-1"></i>                            @User.Identity.Name                        </a>                        <ul class="dropdown-menu">                            <li><a class="dropdown-item" href="@Url.Action("Profile", "Account")">                                    <i class="bi bi-person me-2"></i>Profile                                </a></li>                            <li><hr class="dropdown-divider"></li>                            <li>                                <form method="post" action="@Url.Action("Logout", "Auth")" class="d-inline">                                    @Html.AntiForgeryToken()                                    <button type="submit" class="dropdown-item">                                        <i class="bi bi-box-arrow-right me-2"></i>Logout                                    </button>                                </form>                            </li>                        </ul>                    </li>                    }                    else                    {                    <li class="nav-item">                        <a class="nav-link" href="@Url.Action("Login", "Auth")">                            <i class="bi bi-box-arrow-in-right me-1"></i>Login                        </a>                    </li>                    <li class="nav-item">                        <a class="nav-link" href="@Url.Action("Register", "Auth")">                            <i class="bi bi-person-plus me-1"></i>Register                        </a>                    </li>                    }                </ul>            </div>        </div>    </nav></header>@if (User.Identity?.IsAuthenticated == true){<div class="modal fade" id="uploadModal" tabindex="-1" aria-labelledby="uploadModalLabel" aria-hidden="true">    <div class="modal-dialog">        <div class="modal-content">            <div class="modal-header">                <h5 class="modal-title" id="uploadModalLabel">                    <i class="bi bi-cloud-upload me-2"></i>Upload File                </h5>                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>            </div>            <form id="uploadForm" enctype="multipart/form-data">                <div class="modal-body">                    @Html.AntiForgeryToken()                    <div class="mb-3">                        <label for="uploadFile" class="form-label">                            <i class="bi bi-file-earmark me-1"></i>Choose File                        </label>                        <input type="file" class="form-control" id="uploadFile" name="File" required>                        <div class="form-text">Maximum file size: 5GB</div>                    </div>                    <div class="mb-3">                        <label for="folderId" class="form-label">                            <i class="bi bi-folder me-1"></i>Upload to Folder (Optional)                        </label>                        <select class="form-select" id="folderId" name="FolderId">                            <option value="">Root Folder</option>                            <!-- TODO: Populate with user's folders -->                        </select>                    </div>                                        <div class="progress d-none" id="uploadProgress">                        <div class="progress-bar progress-bar-striped progress-bar-animated"                             role="progressbar" style="width: 0%"></div>                    </div>                                        <div id="uploadStatus" class="mt-3"></div>                </div>                <div class="modal-footer">                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>                    <button type="submit" class="btn btn-primary" id="uploadBtn">                        <i class="bi bi-cloud-upload me-1"></i>Upload File                    </button>                </div>            </form>        </div>    </div></div>}<div class="container">    <main role="main" class="pb-3">        @RenderBody()    </main></div><footer class="border-top footer text-muted">    <div class="container">        &copy; 2025 - KCloud.Web - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>    </div></footer><script src="~/lib/jquery/dist/jquery.min.js"></script><script src="https://code.jquery.com/jquery-3.7.0.min.js"></script><script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>@await RenderSectionAsync("Scripts", required: false)@if (User.Identity?.IsAuthenticated == true){    <script>    document.getElementById('uploadForm').addEventListener('submit', async function(e) {        e.preventDefault();        const formData = new FormData(this);        const uploadBtn = document.getElementById('uploadBtn');        const uploadProgress = document.getElementById('uploadProgress');        const uploadStatus = document.getElementById('uploadStatus');                uploadBtn.disabled = true;        uploadBtn.innerHTML = '<i class="bi bi-hourglass-split me-1"></i>Uploading...';        uploadProgress.classList.remove('d-none');        uploadStatus.innerHTML = '';        try {            const response = await fetch('@Url.Action("Upload", "File")', {                method: 'POST',                body: formData            });            const result = await response.json();            if (result.success) {                uploadStatus.innerHTML = `<div class="alert alert-success"><i class="bi bi-check-circle me-2"></i>${result.message}</div>`;                setTimeout(() => {                    bootstrap.Modal.getInstance(document.getElementById('uploadModal')).hide();                    location.reload();                 }, 1500);            } else {                uploadStatus.innerHTML = `<div class="alert alert-danger"><i class="bi bi-exclamation-circle me-2"></i>${result.message}</div>`;            }        } catch (error) {            uploadStatus.innerHTML = `<div class="alert alert-danger"><i class="bi bi-exclamation-circle me-2"></i>Upload failed. Please try again.</div>`;        }        uploadBtn.disabled = false;        uploadBtn.innerHTML = '<i class="bi bi-cloud-upload me-1"></i>Upload File';        uploadProgress.classList.add('d-none');    });</script>}</body></html>