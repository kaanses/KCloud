@model PublicFileViewModel@using KCloud.Web.Helpers@{ViewData["Title"] = $"Shared File - {Model.File.FileName}";Layout = "_Layout";}@section Styles {<link rel="stylesheet" href="~/css/file.css" asp-append-version="true"/>}<div class="container-fluid py-4">    <div class="row justify-content-center">        <div class="col-lg-12 col-xl-6">            <div class="kcloud-public-file-card">                                <div class="kcloud-file-showcase">                    @{                    var iconClass = FileHelpers.GetFileIcon(Model.File.ContentType);                    var isImage = Model.File.ContentType.StartsWith("image/");                    }                    <div class="kcloud-showcase-preview">                        @if (isImage)                        {                        <div class="kcloud-image-showcase" onclick="openImagePreview()">                            <img src="@Url.Action("Download", "File", new { id = Model.File.Id, isPublicAccess = true })"                                 alt="@Model.File.FileName"                                 class="kcloud-showcase-image">                            <div class="kcloud-image-overlay">                                <i class="bi bi-zoom-in"></i>                                <span>Click to view full size</span>                            </div>                        </div>                        }                        else                        {                        <div class="kcloud-file-showcase-icon">                            <i class="@iconClass"></i>                        </div>                        }                    </div>                    <div class="kcloud-showcase-details">                        <h1 class="kcloud-showcase-title">@Model.File.FileName</h1>                        <div class="kcloud-showcase-meta">                            <div class="kcloud-meta-grid">                                <div class="kcloud-meta-item">                                    <i class="bi bi-hdd-stack"></i>                                    <div class="kcloud-meta-content">                                        <span class="kcloud-meta-label">Size</span>                                        <span class="kcloud-meta-value">@FileHelpers.FormatFileSize(Model.File.FileSizeBytes)</span>                                    </div>                                </div>                                <div class="kcloud-meta-item">                                    <i class="bi bi-file-earmark-text"></i>                                    <div class="kcloud-meta-content">                                        <span class="kcloud-meta-label">Type</span>                                        <span class="kcloud-meta-value">@FileHelpers.GetFileTypeName(Model.File.ContentType)</span>                                    </div>                                </div>                                <div class="kcloud-meta-item">                                    <i class="bi bi-calendar-check"></i>                                    <div class="kcloud-meta-content">                                        <span class="kcloud-meta-label">Shared</span>                                        <span class="kcloud-meta-value">@Model.File.UploadedAt.ToString("MMM dd, yyyy")</span>                                    </div>                                </div>                            </div>                        </div>                    </div>                </div>                                <div class="kcloud-action-section">                    <div class="kcloud-primary-action">                        <a href="@Url.Action("Download", "File", new { id = Model.File.Id, isPublicAccess = true })"                           class="kcloud-primary-download-btn">                            <div class="kcloud-btn-icon">                                <i class="bi bi-cloud-download"></i>                            </div>                            <div class="kcloud-btn-content">                                <span class="kcloud-btn-title">Download File</span>                                <span class="kcloud-btn-subtitle">@FileHelpers.FormatFileSize(Model.File.FileSizeBytes) â€¢ Ready to download</span>                            </div>                            <div class="kcloud-btn-arrow">                                <i class="bi bi-arrow-right"></i>                            </div>                        </a>                    </div>                    <div class="kcloud-secondary-actions">                        <button type="button" class="kcloud-secondary-btn" onclick="copyCurrentUrl()">                            <i class="bi bi-clipboard"></i>                            <span>Copy Link</span>                        </button>                        @if (isImage)                        {                        <button type="button" class="kcloud-secondary-btn" onclick="openImagePreview()">                            <i class="bi bi-zoom-in"></i>                            <span>View Full Size</span>                        </button>                        }                    </div>                </div>                <div class="kcloud-footer-notice">                    <div class="kcloud-notice-content">                        <i class="bi bi-shield-check me-2"></i>                        <span>Secure file sharing powered by KCloud</span>                    </div>                </div>            </div>        </div>    </div></div>@section Scripts {    <script>    function openImagePreview() {        const img = document.querySelector('.kcloud-showcase-image');        if (!img) {            console.error('No image element found');            return;        }        console.log('Opening image preview for:', img.src);                const overlay = document.createElement('div');        overlay.className = 'image-preview-overlay';        overlay.style.cssText = `                position: fixed;                top: 0;                left: 0;                width: 100%;                height: 100%;                background: rgba(0, 0, 0, 0.8);                z-index: 9999;                display: flex;                justify-content: center;                align-items: center;            `;        overlay.innerHTML = `        <div class="kcloud-image-modal">            <button class="image-preview-close" onclick="closeImagePreview()" style="position: absolute; top: 25px; right: 20px; color: #222; background: #d4ff00; border: 3px solid #000; box-shadow: 0 0 0 3px #fff; font-size: 24px; cursor: pointer; border-radius: 50%; width: 40px; height: 40px; z-index: 10000;  display: flex; align-items: center; justify-content: center;">                <svg width="20" height="20" viewBox="0 0 20 20" fill="none" aria-hidden="true">                    <line x1="5" y1="5" x2="15" y2="15" stroke="#222" stroke-width="2" stroke-linecap="round"/>                    <line x1="15" y1="5" x2="5" y2="15" stroke="#222" stroke-width="2" stroke-linecap="round"/>                </svg>            </button>            <img src="${img.src}" alt="${img.alt}" class="kcloud-modal-image">        </div>    `;        document.body.appendChild(overlay);        document.body.style.overflow = 'hidden';                overlay.addEventListener('click', function(e) {            if (e.target === overlay) {                closeImagePreview();            }        });    }    function closeImagePreview() {        const overlay = document.querySelector('.image-preview-overlay');        if (overlay) {            overlay.remove();            document.body.style.overflow = '';        }    }        document.addEventListener('keydown', function(e) {        if (e.key === 'Escape') {            closeImagePreview();        }    });    function copyCurrentUrl() {        const currentUrl = window.location.href;        if (navigator.clipboard && window.isSecureContext) {            navigator.clipboard.writeText(currentUrl).then(() => {                showCopyNotification('Link copied to clipboard!');            }).catch(err => {                console.error('Failed to copy: ', err);            });    }    function showCopyNotification(message) {        const notification = document.createElement('div');        notification.textContent = message;        notification.style.cssText = `                position: fixed;                top: 20px;                right: 20px;                background: #28a745;                color: white;                padding: 12px 20px;                border-radius: 8px;                z-index: 10000;                font-size: 14px;                box-shadow: 0 4px 12px rgba(0,0,0,0.2);            `;        document.body.appendChild(notification);        setTimeout(() => {            if (notification.parentNode) {                notification.parentNode.removeChild(notification);            }        }, 3000);    }    }       </script>}