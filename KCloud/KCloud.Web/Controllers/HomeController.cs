using AutoMapper;using KCloud.Web.Features.Files.Queries;using KCloud.Web.Models.ViewModel;using MediatR;using Microsoft.AspNetCore.Authorization;using Microsoft.AspNetCore.Mvc;namespace KCloud.Web.Controllers;public class HomeController(IMediator mediator,    IMapper mapper ): Controller{    public IActionResult Index()    {        return View();    }    public IActionResult About()    {        return View();    }    public IActionResult Pricing()    {        return View();    }       [HttpGet("public/{token}")]    public async Task<IActionResult> AccessPublicFile(string token)    {        if (string.IsNullOrWhiteSpace(token))        {            return RedirectToAction("Index", "Home");        }        var query = new GetFileByPublicLinkQuery(token);        var result = await mediator.Send(query);        if (!result.IsSuccess)        {            TempData["Error"] = result.Errors.FirstOrDefault() ?? "Failed to access public file.";            return RedirectToAction("Index", "Home");        }        // Map to ViewModel and set the token        var viewModel = mapper.Map<PublicFileViewModel>(result.Value);        viewModel.PublicToken = token;        return View(viewModel);    }}