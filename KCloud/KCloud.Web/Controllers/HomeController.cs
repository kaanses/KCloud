using AutoMapper;using KCloud.Web.Features.Files.Queries;using KCloud.Web.Models.ViewModel;using MediatR;using Microsoft.AspNetCore.Localization;using Microsoft.AspNetCore.Mvc;using Serilog;namespace KCloud.Web.Controllers;public class HomeController(IMediator mediator, IMapper mapper) : BaseController{    public IActionResult Index()    {        return View();    }        public IActionResult About()    {        return View();    }        public IActionResult Pricing()    {        return View();    }       [HttpGet("public/{token}")]    public async Task<IActionResult> AccessPublicFile(string token)    {        if (string.IsNullOrWhiteSpace(token))        {            return RedirectToAction("Index", "Home");        }        var query = new GetFileByPublicLinkQuery(token);        var result = await mediator.Send(query);        if (!result.IsSuccess)        {            TempData["Error"] = string.Join(", ", result.Errors);            return RedirectToAction("Index", "Home");        }        var viewModel = mapper.Map<PublicFileViewModel>(result.Value);        viewModel.PublicToken = token;        return View(viewModel);    }    [HttpPost]    public IActionResult SetLanguage([FromBody] string lang)    {        try        {            var culture = lang switch            {                "en" => "en-US",                "tr" => "tr-TR",                _ => "en-US"            };            Response.Cookies.Append(                CookieRequestCultureProvider.DefaultCookieName,                CookieRequestCultureProvider.MakeCookieValue(new RequestCulture(culture)),                new CookieOptions                {                    Expires = DateTimeOffset.UtcNow.AddYears(1),                    HttpOnly = true,                    Secure = Request.IsHttps,                     SameSite = SameSiteMode.Strict                }            );            Log.Information("Language change triggered");            return Ok();        }        catch (Exception)        {            return Json(new { error = "Failed to set language" });        }    }}