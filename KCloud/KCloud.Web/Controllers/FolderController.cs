using Microsoft.AspNetCore.Mvc;using MediatR;using KCloud.Web.Features.Folders.Commands;using KCloud.Web.Features.Folders.Queries;using KCloud.Web.Models.ViewModel;using Microsoft.AspNetCore.Authorization;using Microsoft.Extensions.Localization;namespace KCloud.Web.Controllers;[Route("[controller]")][Authorize]public class FolderController(    IMediator mediator,    ILogger<FolderController> logger,    IStringLocalizer localizer) : BaseController{    [HttpPost("details")]    public async Task<IActionResult> Details([FromBody] GetFolderDetailsViewModel request)    {        var command = new GetFolderDetailsQuery(request.Id);        var result = await mediator.Send(command);        return HandleResult(result);    }    [HttpPost("create")]    public async Task<IActionResult> Create([FromBody] CreateFolderViewModel request)    {        var command = new CreateFolderCommand(request.Name, request.ParentFolderId);        var result = await mediator.Send(command);        if (result.IsSuccess)        {            logger.LogInformation("Folder '{FolderName}' created successfully", request.Name);        }        return HandleResult(result, localizer["FolderCreatedSuccessfully"]);    }    [HttpPost("update")]    public async Task<IActionResult> Update([FromBody] UpdateFolderViewModel request)    {        var command = new UpdateFolderCommand(request.Id, request.Name, request.ParentFolderId);        var result = await mediator.Send(command);        return HandleResult(result, localizer["FolderUpdatedSuccessfully"]);    }    [HttpPost("delete")]    public async Task<IActionResult> Delete([FromBody] DeleteFolderViewModel request)    {        var command = new DeleteFolderCommand(            request.Id,            request.DeleteContents,            request.MoveContentsToParent,            request.MoveContentsToRoot        );        var result = await mediator.Send(command);        return HandleResult(result, localizer["FolderDeletedSuccessfully"]);    }}