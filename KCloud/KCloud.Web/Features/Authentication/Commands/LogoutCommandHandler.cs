using Ardalis.Result;using KCloud.Web.Interfaces;using MediatR;namespace KCloud.Web.Features.Authentication.Commands;public class LogoutCommandHandler(    IHttpClientFactory httpClientFactory,    IAuthTokenService tokenService,    ILogger<LogoutCommandHandler> logger)    : IRequestHandler<LogoutCommand, Result>{    public async Task<Result> Handle(LogoutCommand request, CancellationToken cancellationToken)    {        try        {            var httpClient = httpClientFactory.CreateClient("KCloudGateway");            var response = await httpClient.PostAsync("/auth/logout", null, cancellationToken);            tokenService.ClearTokens();                        if (response.IsSuccessStatusCode)            {                logger.LogInformation("User logged out successfully from backend and frontend");                return Result.Success();            }                        logger.LogWarning("Backend logout failed: {StatusCode}, but local tokens cleared", response.StatusCode);            return Result.Success();        }        catch (Exception ex)        {            tokenService.ClearTokens();            logger.LogError(ex, "Error during logout, but local tokens cleared");            return Result.Success();        }    }}