using Ardalis.Result;using MediatR;namespace KCloud.Web.Features.Authentication.Commands;public class LogoutCommandHandler(    IHttpClientFactory httpClientFactory,    IHttpContextAccessor httpContextAccessor,    ILogger<LogoutCommandHandler> logger)    : IRequestHandler<LogoutCommand, Result>{    public async Task<Result> Handle(LogoutCommand request, CancellationToken cancellationToken)    {        try        {            var httpClient = httpClientFactory.CreateClient("KCloudGateway");                        var httpContext = httpContextAccessor.HttpContext;            var jwtToken = httpContext?.User?.FindFirst("jwt_token")?.Value;                        if (!string.IsNullOrEmpty(jwtToken))            {                httpClient.DefaultRequestHeaders.Authorization =                     new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", jwtToken);            }            var response = await httpClient.PostAsync("/auth/logout", null, cancellationToken);                        if (response.IsSuccessStatusCode)            {                return Result.Success();            }            logger.LogWarning("Backend logout failed: {StatusCode}", response.StatusCode);            return Result.Success();        }        catch (Exception ex)        {            logger.LogError(ex, "Error during logout");            return Result.Success();        }    }}