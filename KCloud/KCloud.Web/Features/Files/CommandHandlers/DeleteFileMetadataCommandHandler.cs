using System.Text;using System.Text.Json;using Ardalis.Result;using KCloud.Web.Features.Files.Commands;using KCloud.Web.Interfaces;using MediatR;namespace KCloud.Web.Features.Files.CommandHandlers;public class DeleteFileMetadataCommandHandler(    IHttpClientFactory httpClientFactory,    IHttpContextAccessor httpContextAccessor,    ILogger<DeleteFileMetadataCommandHandler> logger,    IParseServerResponseService parseServerResponseService,    IAuthTokenService tokenService)    : IRequestHandler<DeleteFileMetadataCommand, Result>{    private readonly JsonSerializerOptions _jsonOptions = new()   {        PropertyNameCaseInsensitive = true,       PropertyNamingPolicy = JsonNamingPolicy.CamelCase   };   public async Task<Result> Handle(DeleteFileMetadataCommand request, CancellationToken cancellationToken)   {       try       {           var httpClient = httpClientFactory.CreateClient("KCloudGateway");                               var json = JsonSerializer.Serialize(request, _jsonOptions);           var content = new StringContent(json, Encoding.UTF8, "application/json");           var requestMessage = new HttpRequestMessage(HttpMethod.Delete, "/file/delete-file")           {               Content = content           };           var response = await httpClient.SendAsync(requestMessage, cancellationToken);           var responseContent = await response.Content.ReadAsStringAsync(cancellationToken);           if (response.IsSuccessStatusCode)           {               return Result.Success();           }                      var errorResult = await parseServerResponseService.ParseErrorResponse<object>(               responseContent,                (int)response.StatusCode);                      return Result.Error(string.Join(", ", errorResult.Errors));       }       catch (Exception ex)       {           logger.LogError(ex, "Network error during file metadata deletion for {FileId}", request.Id);           return Result.Error("Unable to connect to server");       }   }}