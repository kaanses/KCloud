using Serilog;using System.Globalization;using AutoMapper;using KCloud.Web.Interfaces;using KCloud.Web.Mappings;using KCloud.Web.Services;using Microsoft.AspNetCore.Localization;var builder = WebApplication.CreateBuilder(args);builder.Host.UseSerilog((context, services, configuration) => configuration    .MinimumLevel.Information()    .WriteTo.Console()    .ReadFrom.Configuration(context.Configuration)    .ReadFrom.Services(services));builder.Services.AddHttpContextAccessor();builder.Services.AddLocalization(options => options.ResourcesPath = "Resources");builder.Services.AddControllersWithViews()    .AddViewLocalization()      .AddDataAnnotationsLocalization(); builder.Services.AddScoped<IParseServerResponseService, ParseServerResponseService>();builder.Services.Configure<RequestLocalizationOptions>(options =>{    var supportedCultures = new[]    {        new CultureInfo("en-US"),         new CultureInfo("tr-TR")      };    options.DefaultRequestCulture = new RequestCulture("en-US");    options.SupportedCultures = supportedCultures;    options.SupportedUICultures = supportedCultures;        options.RequestCultureProviders.Insert(0, new QueryStringRequestCultureProvider());    options.RequestCultureProviders.Insert(1, new CookieRequestCultureProvider());    options.RequestCultureProviders.Insert(2, new AcceptLanguageHeaderRequestCultureProvider());});var mapperConfig = new MapperConfiguration(cfg =>{    cfg.AddProfile<MappingProfile>();});        IMapper mapper = mapperConfig.CreateMapper();        builder.Services.AddSingleton(mapper);builder.Services.AddHttpClient("KCloudGateway", client =>{    client.BaseAddress = new Uri("http://localhost:5178/"); });builder.Services.AddMediatR(cfg => cfg.RegisterServicesFromAssembly(typeof(Program).Assembly));builder.Services.AddAuthentication("Cookies")    .AddCookie("Cookies", options =>    {        options.LoginPath = "/Auth/Login";        options.LogoutPath = "/Auth/Logout";    });var app = builder.Build();if (!app.Environment.IsDevelopment()){    app.UseExceptionHandler("/Home/Error");    app.UseHsts();}app.UseHttpsRedirection();app.UseStaticFiles();app.UseRequestLocalization();app.UseRouting();app.UseAuthentication();app.UseAuthorization();app.MapControllerRoute(    name: "default",    pattern: "{controller=Home}/{action=Index}/{id?}");app.Run();