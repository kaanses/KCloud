namespace KCloud.Web.Helpers{    public static class FileHelpers    {        public static string GetFileIcon(string contentType)        {            return contentType?.ToLower() switch            {                // Images - Blue/Cyan theme                var ct when ct.StartsWith("image/jpeg") || ct.Contains("jpeg") => "bi bi-image image-jpeg-color",                var ct when ct.StartsWith("image/png") || ct.Contains("png") => "bi bi-image image-png-color",                var ct when ct.StartsWith("image/gif") || ct.Contains("gif") => "bi bi-image image-gif-color",                var ct when ct.StartsWith("image/webp") || ct.Contains("webp") => "bi bi-image image-webp-color",                var ct when ct.StartsWith("image/") => "bi bi-image image-color",                        // Videos - Red/Pink theme                var ct when ct.StartsWith("video/") => "bi bi-play-btn video-color",                        // Audio - Purple theme                var ct when ct.StartsWith("audio/") => "bi bi-music-note audio-color",                        // Documents - Unique colors for each                var ct when ct.Contains("pdf") => "bi bi-file-pdf pdf-color",                var ct when ct.Contains("word") || ct.Contains("document") => "bi bi-file-word word-color",                var ct when ct.Contains("excel") || ct.Contains("spreadsheet") => "bi bi-file-excel excel-color",                var ct when ct.Contains("powerpoint") || ct.Contains("presentation") => "bi bi-file-ppt ppt-color",                        // Archives - Orange theme                var ct when ct.Contains("zip") || ct.Contains("rar") || ct.Contains("archive") => "bi bi-file-zip archive-color",                        // Text files - Green theme                var ct when ct.Contains("text") || ct.Contains("plain") => "bi bi-file-text text-color",                var ct when ct.Contains("json") => "bi bi-file-code json-color",                        // Default - Gray                _ => "bi bi-file-earmark default-file-color"            };        }        public static string FormatFileSize(long bytes)        {            string[] sizes = { "B", "KB", "MB", "GB", "TB" };            double len = bytes;            int order = 0;            while (len >= 1024 && order < sizes.Length - 1)            {                order++;                len = len / 1024;            }            return $"{len:0.##} {sizes[order]}";        }        public static string GetFileTypeName(string contentType)        {            return contentType?.ToLower() switch            {                var ct when ct.StartsWith("image/") => "Image",                var ct when ct.StartsWith("video/") => "Video",                 var ct when ct.StartsWith("audio/") => "Audio",                var ct when ct.Contains("pdf") => "PDF Document",                var ct when ct.Contains("word") => "Word Document",                var ct when ct.Contains("excel") => "Excel Spreadsheet",                var ct when ct.Contains("powerpoint") => "PowerPoint Presentation",                var ct when ct.Contains("zip") || ct.Contains("rar") => "Archive",                var ct when ct.Contains("text") => "Text File",                var ct when ct.Contains("json") => "JSON File",                _ => "File"            };        }    }}