using FluentValidation;using KCloud.Common.Helpers;using KCloud.FileMetadata.Features.Files.Commands;using KCloud.FileMetadata.Helpers;using Microsoft.Extensions.Localization;namespace KCloud.FileMetadata.Validators;public class CreateFileMetadataCommandValidator : AbstractValidator<CreateFileMetadataCommand>{    private readonly IStringLocalizer _localizer;    public CreateFileMetadataCommandValidator(IStringLocalizer localizer)    {        _localizer = localizer;        RuleFor(x => x.FileName)            .NotEmpty().WithMessage(_localizer["FileNameRequired"].Value)            .MaximumLength(75).WithMessage(_localizer["FileNameMaxLength"])            .Must(ValidationHelper.BeValidName).WithMessage(_localizer["FileNameInvalidCharacters"].Value);        RuleFor(x => x.ContentType)            .MaximumLength(20).WithMessage(_localizer["ContentTypeMaxLength"].Value);        RuleFor(x => x.FileSizeBytes)            .GreaterThan(0).WithMessage(_localizer["FileSizeGreaterThanZero"])            .LessThanOrEqualTo(5_000_000_000).WithMessage(_localizer["FileSizeMaxLimit"].Value);        RuleFor(x => x.StoragePath)            .NotEmpty().WithMessage(_localizer["StoragePathRequired"])            .MaximumLength(500).WithMessage(_localizer["StoragePathMaxLength"].Value);    }}