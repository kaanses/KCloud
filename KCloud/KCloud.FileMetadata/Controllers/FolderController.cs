using Ardalis.Result;using KCloud.FileMetadata.Features.Folders.Commands;using KCloud.FileMetadata.Features.Folders.Queries;using MediatR;using Microsoft.AspNetCore.Authorization;using Microsoft.AspNetCore.Mvc;namespace KCloud.FileMetadata.Controllers;[ApiController][Route("api/[controller]")][Authorize]public class FolderController(IMediator mediator) : BaseController{    /// <summary>    /// Create a new folder    /// </summary>    [HttpPost]    public async Task<IActionResult> CreateFolder([FromBody] CreateFolderCommand command)    {        var result = await mediator.Send(command);        return HandleResult(result);    }    /// <summary>    /// Update folder (rename or move)    /// </summary>    [HttpPut("{id}")]    public async Task<IActionResult> UpdateFolder(Guid id, [FromBody] UpdateFolderCommand command)    {        command.Id = id;        var result = await mediator.Send(command);        return HandleResult(result);    }    /// <summary>    /// Delete folder    /// </summary>    [HttpDelete("{id}")]    public async Task<IActionResult> DeleteFolder(Guid id, [FromBody] DeleteFolderCommand command)    {        command.Id = id;        var result = await mediator.Send(command);        return HandleResult(result);    }        [HttpGet("{id}/details")]    public async Task<IActionResult> GetFolderDetails(Guid id)    {        var query = new GetFolderDetailsQuery { Id = id };        var result = await mediator.Send(query);        return HandleResult(result);    }}